# This file is generated by gyp; do not edit.

TOOLSET := host
TARGET := dump_syms
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=dump_syms' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DHAVE_A_OUT_H' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-w \
	-std=c++0x \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-exceptions \
	-std=gnu++0x

INCS_Debug := \
	-I/home/kol/.node-gyp/8.10.0/include/node \
	-I/home/kol/.node-gyp/8.10.0/src \
	-I/home/kol/.node-gyp/8.10.0/deps/openssl/config \
	-I/home/kol/.node-gyp/8.10.0/deps/openssl/openssl/include \
	-I/home/kol/.node-gyp/8.10.0/deps/uv/include \
	-I/home/kol/.node-gyp/8.10.0/deps/zlib \
	-I/home/kol/.node-gyp/8.10.0/deps/v8/include \
	-I$(srcdir)/deps/breakpad/src \
	-I$(srcdir)/deps

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=dump_syms' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DHAVE_A_OUT_H'

# Flags passed to all source files.
CFLAGS_Release := \
	-w \
	-std=c++0x \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-exceptions \
	-std=gnu++0x

INCS_Release := \
	-I/home/kol/.node-gyp/8.10.0/include/node \
	-I/home/kol/.node-gyp/8.10.0/src \
	-I/home/kol/.node-gyp/8.10.0/deps/openssl/config \
	-I/home/kol/.node-gyp/8.10.0/deps/openssl/openssl/include \
	-I/home/kol/.node-gyp/8.10.0/deps/uv/include \
	-I/home/kol/.node-gyp/8.10.0/deps/zlib \
	-I/home/kol/.node-gyp/8.10.0/deps/v8/include \
	-I$(srcdir)/deps/breakpad/src \
	-I$(srcdir)/deps

OBJS := \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/dwarf/bytereader.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/dwarf_cfi_to_module.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/dwarf_cu_to_module.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/dwarf/dwarf2diehandler.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/dwarf/dwarf2reader.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/dwarf/elf_reader.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/dwarf_line_to_module.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/language.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/linux/crc32.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/linux/dump_symbols.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/linux/elf_symbols_to_module.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/linux/elfutils.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/linux/file_id.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/linux/linux_libc_support.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/linux/memory_mapped_file.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/module.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/stabs_reader.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/common/stabs_to_module.o \
	$(obj).host/$(TARGET)/deps/breakpad/src/tools/linux/dump_syms/dump_syms.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(builddir)/dump_syms: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/dump_syms: LIBS := $(LIBS)
$(builddir)/dump_syms: LD_INPUTS := $(OBJS)
$(builddir)/dump_syms: TOOLSET := $(TOOLSET)
$(builddir)/dump_syms: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/dump_syms
# Add target alias
.PHONY: dump_syms
dump_syms: $(builddir)/dump_syms

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/dump_syms

